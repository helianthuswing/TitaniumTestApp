From 27a803325695fdb03d76c18444911e1bfa2ed5f2 Mon Sep 17 00:00:00 2001
From: exilis <exilis@gmail.com>
Date: Mon, 21 Feb 2011 06:06:51 -0800
Subject: [PATCH] now it runs on Android

---
 lib/oauth.js         |    2 +-
 lib/oauth_adapter.js |   85 ++++++++++++++++++++++---------------------------
 lib/twitter_api.js   |   16 +++++----
 3 files changed, 48 insertions(+), 55 deletions(-)

diff --git a/lib/oauth.js b/lib/oauth.js
index 295569a..592fd3e 100644
--- a/lib/oauth.js
+++ b/lib/oauth.js
@@ -323,7 +323,7 @@ OAuth.setProperties(OAuth, // utility functions
 ,
     timestamp: function timestamp() {
         var t = (new Date()).getTime() + OAuth.timeCorrectionMsec;
-        return Math.floor(t / 1000);
+        return Math.floor(t / 1000).toFixed(0);
     }
 ,
     nonce: function nonce(length) {
diff --git a/lib/oauth_adapter.js b/lib/oauth_adapter.js
index ed5db7a..2762f92 100644
--- a/lib/oauth_adapter.js
+++ b/lib/oauth_adapter.js
@@ -64,8 +64,8 @@
  *
  * Save them locally in a lib subfolder
  */
-Ti.include('lib/sha1.js');
-Ti.include('lib/oauth.js');
+Ti.include('sha1.js');
+Ti.include('oauth.js');
 
 // create an OAuthAdapter instance
 var OAuthAdapter = function(pConsumerSecret, pConsumerKey, pSignatureMethod)
@@ -169,7 +169,7 @@ var OAuthAdapter = function(pConsumerSecret, pConsumerKey, pSignatureMethod)
     };
 
     // requests a requet token with the given Url
-    this.getRequestToken = function(pUrl)
+    this.getRequestToken = function(pUrl,callback)
     {
         accessor.tokenSecret = '';
 
@@ -178,16 +178,22 @@ var OAuthAdapter = function(pConsumerSecret, pConsumerKey, pSignatureMethod)
         OAuth.SignatureMethod.sign(message, accessor);
 
         var client = Ti.Network.createHTTPClient();
+        client.onload = function(){
+          var responseParams = OAuth.getParameterMap(client.responseText);
+          requestToken = responseParams['oauth_token'];
+          requestTokenSecret = responseParams['oauth_token_secret'];
+          Ti.API.debug('request token got the following response: ' + client.responseText);
+          callback(client.responseText);
+        };
+        client.onerror = function(e){
+          Ti.API.debug(e);
+          if(params.onError){
+            params.onError(e);
+          }
+          callback(null);
+        }
         client.open('POST', pUrl, false);
         client.send(OAuth.getParameterMap(message.parameters));
-
-        var responseParams = OAuth.getParameterMap(client.responseText);
-        requestToken = responseParams['oauth_token'];
-        requestTokenSecret = responseParams['oauth_token_secret'];
-
-        Ti.API.debug('request token got the following response: ' + client.responseText);
-
-        return client.responseText;
     }
 
     // unloads the UI used to have the user authorize the application
@@ -225,31 +231,12 @@ var OAuthAdapter = function(pConsumerSecret, pConsumerKey, pSignatureMethod)
     {
         Ti.API.debug('authorizeUILoaded');
 
-        var xmlDocument = Ti.XML.parseString(e.source.html);
-        var nodeList = xmlDocument.getElementsByTagName('div');
-
-        for (var i = 0; i < nodeList.length; i++)
-        {
-            var node = nodeList.item(i);
-            var id = node.attributes.getNamedItem('id');
-            if (id && id.nodeValue == 'oauth_pin')
-            {
-                pin = node.text;
-
-                if (receivePinCallback) setTimeout(receivePinCallback, 100);
-
-                id = null;
-                node = null;
-
-                destroyAuthorizeUI();
-
-                break;
-            }
+        var val = webView.evalJS("document.getElementById('oauth_pin').innerHTML");
+        if( val ){
+          pin = val;
+          if (receivePinCallback) setTimeout(receivePinCallback, 100);
+          destroyAuthorizeUI();
         }
-
-        nodeList = null;
-        xmlDocument = null;
-
     };
 
     // shows the authorization UI
@@ -306,7 +293,7 @@ var OAuthAdapter = function(pConsumerSecret, pConsumerKey, pSignatureMethod)
         view.animate(animation);
     };
 
-    this.getAccessToken = function(pUrl)
+    this.getAccessToken = function(pUrl,callback)
     {
         accessor.tokenSecret = requestTokenSecret;
 
@@ -322,19 +309,23 @@ var OAuthAdapter = function(pConsumerSecret, pConsumerKey, pSignatureMethod)
         Ti.API.debug(p + ': ' + parameterMap[p]);
 
         var client = Ti.Network.createHTTPClient();
+        client.onload = function(){
+          var responseParams = OAuth.getParameterMap(client.responseText);
+          accessToken = responseParams['oauth_token'];
+          accessTokenSecret = responseParams['oauth_token_secret'];
+          Ti.API.debug('*** get access token, Response: ' + client.responseText);
+          processQueue();
+          callback();
+        };
+        client.onerror = function(e){
+          Ti.API.debug(e);
+          if(params.onError){
+            params.onError(e);
+          }
+          callback();
+        }
         client.open('POST', pUrl, false);
         client.send(parameterMap);
-
-        var responseParams = OAuth.getParameterMap(client.responseText);
-        accessToken = responseParams['oauth_token'];
-        accessTokenSecret = responseParams['oauth_token_secret'];
-
-        Ti.API.debug('*** get access token, Response: ' + client.responseText);
-
-        processQueue();
-
-        return client.responseText;
-
     };
 
     var processQueue = function()
diff --git a/lib/twitter_api.js b/lib/twitter_api.js
index 771fb2c..c20a30f 100644
--- a/lib/twitter_api.js
+++ b/lib/twitter_api.js
@@ -1,7 +1,7 @@
 // Twitter API Wrapper
-Ti.include('lib/sha1.js');
-Ti.include('lib/oauth.js');
-Ti.include('lib/oauth_adapter.js');
+Ti.include('sha1.js');
+Ti.include('oauth.js');
+Ti.include('oauth_adapter.js');
 
 var TwitterApi = function(params){
   var self = this;
@@ -21,11 +21,13 @@ var TwitterApi = function(params){
     if (oAuthAdapter.isAuthorized() == false) 
     {
       var receivePin = function() {
-        oAuthAdapter.getAccessToken('https://api.twitter.com/oauth/access_token'); 
-        oAuthAdapter.saveAccessToken('twitter');
+        oAuthAdapter.getAccessToken('https://api.twitter.com/oauth/access_token', function(){
+          oAuthAdapter.saveAccessToken('twitter');
+        });
       };
-      oAuthAdapter.showAuthorizeUI('https://api.twitter.com/oauth/authorize?' +
-      oAuthAdapter.getRequestToken('https://api.twitter.com/oauth/request_token'), receivePin);
+      oAuthAdapter.getRequestToken('https://api.twitter.com/oauth/request_token', function(token){
+        oAuthAdapter.showAuthorizeUI('https://api.twitter.com/oauth/authorize?' + token , receivePin);
+      });
     }
   };
   this.callApi = function(params){
-- 
1.7.4.1

